<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[MarkDown 笔记]]></title>
      <url>/2017/09/28/markdown-note/</url>
      <content type="html"><![CDATA[<p>由于 Hexo Markdown 插件渲染的关系，并不是所有的效果都能显示。<br><a id="more"></a></p>
<p>MarkDown 一种用于写作的轻量级【标记语言】。它用简洁的语法代替排版，而不像一般的文字处理软件 Word 或者 Pages 有大量的排版、字体设置等。</p>
<p>如果你对文章的样式没有太多要求，只注重写文章本身的话 MarkDown 将会是一个不错的选择。</p>
<h2 id="一、工具"><a href="#一、工具" class="headerlink" title="一、工具"></a>一、<strong>工具</strong></h2><p>支持 MarkDown 写作的软件有很多，因为国外平台的国内访问大都不太稳，这里就列举几个国内常用的：</p>
<ul>
<li><p><strong>简书</strong> 博客平台，书写的时候每隔几秒钟就会自动备份一次，需要注册才能使用。</p>
</li>
<li><p><strong>马克飞象</strong> 付费软件，对于映像笔记用户来说是个不错的选择。</p>
</li>
<li><p><strong>Cmd MarkDown</strong> 作业部落的产品，跨平台，支持 Windows、Linux、Mac 和 Web。而且提供了备份等功能。</p>
</li>
<li><p><strong>Atom</strong> 著名的 Github 推出的编辑器，功能强大，支持原生实时预览。实时预览快捷键 ctrl+shift+m 。</p>
</li>
</ul>
<h2 id="二、基本语法"><a href="#二、基本语法" class="headerlink" title="二、基本语法"></a>二、<strong>基本语法</strong></h2><p>MarkDown 对于标题呀、字体呀等可能有多种写法。个人建议初学的时候记忆一种语法就好，待熟练后若有兴趣可多记几种。</p>
<h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.<strong>标题</strong></h3><p>MarkDown 支持 1~6 级标题，通过加在标题文字前的 <strong>#</strong> 来区分。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 这是一级标题</div><div class="line">## 这是二级标题</div><div class="line">...</div><div class="line">###### 这是六级标题</div></pre></td></tr></table></figure>
<p><strong><em>Tips: # 和标题文字之间是有一个空格的。</em></strong></p>
<h3 id="2-段落"><a href="#2-段落" class="headerlink" title="2.段落"></a>2.<strong>段落</strong></h3><p>很简单，一行文字就是一个段落。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这是一行文字，MarkDown 中的段落。</div></pre></td></tr></table></figure>
<p>如果要换行，那么两行之间要隔一个空行。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">这是一行文字，MarkDown 中的段落。</div><div class="line">                               //这行是空行</div><div class="line">这是另一行文字，MarkDown 中的段落。</div></pre></td></tr></table></figure>
<h3 id="3-粗体和斜体"><a href="#3-粗体和斜体" class="headerlink" title="3.粗体和斜体"></a>3.<strong>粗体和斜体</strong></h3><p>Markdown 中字体的粗体和斜体用 <strong> * </strong> 表示。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">*这里是斜体*</div><div class="line">**这里是粗体**</div><div class="line">***这里是粗体 + 斜体***</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><em>这里是斜体</em></p>
<p><strong>这里是粗体</strong></p>
<p><strong><em>这里是粗体 + 斜体</em></strong></p>
<h3 id="4-删除线"><a href="#4-删除线" class="headerlink" title="4.删除线"></a>4.<strong>删除线</strong></h3><p>可能有一部分编辑器不支持这个元素。删除线用 <strong>~</strong> 定义。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">~~这里有删除线~~</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><del>这里有删除线</del></p>
<p><strong><em>Tips: 删除线要用两个 ~ 来包裹文字。</em></strong></p>
<h3 id="5-引用"><a href="#5-引用" class="headerlink" title="5.引用"></a>5.<strong>引用</strong></h3><p>在一行文字前添加大于号 <strong>&gt;</strong> 来使用引用格式。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;这里是引用句子。</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<blockquote>
<p>这里是引用句子。</p>
</blockquote>
<p>引用可以嵌套使用，例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&gt;&gt;这里使用了嵌套引用。</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<blockquote>
<blockquote>
<p>这里使用了嵌套引用。</p>
</blockquote>
</blockquote>
<p>也可以嵌套其他格式。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&gt; ## 嵌套一个二级标题。</div><div class="line">&gt; *嵌套斜体字。*</div><div class="line">&gt; **嵌套粗体字。**</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<blockquote>
<h2 id="嵌套一个二级标题。"><a href="#嵌套一个二级标题。" class="headerlink" title="嵌套一个二级标题。"></a>嵌套一个二级标题。</h2><p><em>嵌套斜体字。</em></p>
<p><strong>嵌套粗体字。</strong></p>
</blockquote>
<h3 id="6-列表"><a href="#6-列表" class="headerlink" title="6.列表"></a>6.<strong>列表</strong></h3><p>列表分为无序列表和有序列表。</p>
<p>无序列表使用加号、减号和星号来标记。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">+ 加号列表</div><div class="line">+ 加号列表</div><div class="line">+ 加号列表</div><div class="line"></div><div class="line">- 减号列表</div><div class="line">- 减号列表</div><div class="line">- 减号列表</div><div class="line"></div><div class="line">* 星号列表</div><div class="line">* 星号列表</div><div class="line">* 星号列表</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<ul>
<li>加号列表</li>
<li>加号列表</li>
<li>加号列表</li>
</ul>
<ul>
<li>减号列表</li>
<li>减号列表</li>
<li>减号列表</li>
</ul>
<ul>
<li>星号列表</li>
<li>星号列表</li>
<li>星号列表</li>
</ul>
<p>有序列表使用数字加上英文句点标记。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1.有序列表</div><div class="line">2.有序列表</div><div class="line">3.有序列表</div></pre></td></tr></table></figure>
<h3 id="7-内联代码"><a href="#7-内联代码" class="headerlink" title="7.内联代码"></a>7.<strong>内联代码</strong></h3><p>内联代码用反引号 <code>` </code> 表示。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">`code`</div><div class="line"></div><div class="line">有的地方说用单个 ` 即可表示内联代码，由于我用的是 Atom 编辑器，</div><div class="line">单个 ` 不起作用，只好用两个 ` 将代码包裹起来。如果代码中有反引号 ` ，</div><div class="line">也可以两个反引号将它包裹起来，但是要加空格。例如，</div><div class="line"></div><div class="line">` ` `</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><code>code</code></p>
<p><code>` </code></p>
<h3 id="8-代码块"><a href="#8-代码块" class="headerlink" title="8.代码块"></a>8.<strong>代码块</strong></h3><p>有两种风格，原生和 Github 。</p>
<p>原生风格，首行缩进四个空格。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">这是一个普通段落。</div><div class="line"></div><div class="line">    这是一个代码块。</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<p>这是一个普通段落。</p>
<pre><code>这是一个代码块。
</code></pre><p>Github 风格，代码块的前后用三个反引号独占一行来标记。效果如下，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">这里是代码块。</div></pre></td></tr></table></figure>
<h3 id="9-分割线"><a href="#9-分割线" class="headerlink" title="9.分割线"></a>9.<strong>分割线</strong></h3><p>分割线可以用三个以上的星号、减号或者底线来标识，行内不能有其他东西，但是可以插入空格。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">***</div><div class="line"></div><div class="line">* * *</div><div class="line"></div><div class="line">---</div><div class="line"></div><div class="line">- - -</div><div class="line"></div><div class="line">___</div><div class="line"></div><div class="line">_ _ _</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<hr>
<hr>
<hr>
<hr>
<hr>
<hr>
<h3 id="10-链接"><a href="#10-链接" class="headerlink" title="10.链接"></a>10.<strong>链接</strong></h3><p>链接用下面的格式标识。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[链接要显示的文字](http://www.zhihu.com &quot;鼠标箭头放到链接上的提示文字，可以不写，与链接之间留有空格&quot;)</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><a href="http://www.zhihu.com" title="鼠标箭头放到链接上的提示文字，可以不写，与链接之间留有空格" target="_blank" rel="external">链接要显示的文字</a></p>
<p>还可以用另外的格式标识，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[链接要显示的文字][id]</div></pre></td></tr></table></figure>
<p>在任意空白位置，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[id]:http://www.zhihu.com &quot;鼠标箭头放到链接上的提示文字，可以不写，与链接之间留有空格&quot;</div></pre></td></tr></table></figure>
<p>效果也是一样的，</p>
<p><a href="http://www.zhihu.com" title="鼠标箭头放到链接上的提示文字，可以不写，与链接之间留有空格" target="_blank" rel="external">链接要显示的文字</a></p>
<h3 id="11-自动链接"><a href="#11-自动链接" class="headerlink" title="11.自动链接"></a>11.<strong>自动链接</strong></h3><p>如果链接的地址和要显示的文字一样的话，可以用尖括号将其包裹形成自动连接。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;http://www.zhihu.com&gt;</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><a href="http://www.zhihu.com" target="_blank" rel="external">http://www.zhihu.com</a></p>
<h3 id="12-图片"><a href="#12-图片" class="headerlink" title="12.图片"></a>12.<strong>图片</strong></h3><p>图片的标识与链接类似。语法如下，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![图片不存在时的提示文字](http://images.cnblogs.com/cnblogs_com/zhangyn/922022/o_%e6%89%8b.jpg &quot;鼠标箭头放到图片上的提示文字&quot;)</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<p><img src="http://images.cnblogs.com/cnblogs_com/zhangyn/922022/o_%e6%89%8b.jpg" alt="图片不存在时的提示文字" title="鼠标箭头放到图片上的提示文字"></p>
<p><img src="http://images.cnblog.com/cnblogs_com/zhangyn/922022/o_%e6%89%8b.jpg" alt="图片不存在时的提示文字" title="鼠标箭头放到图片上的提示文字"></p>
<p>图片的 MarkDown 标识与 HTML 标签有对应的关系，关系如下，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">![img alt 属性](img 地址 “img title 属性”)</div><div class="line"></div><div class="line">&lt;img src=&apos;img 地址&apos; alt=&apos;img alt 属性&apos; title=&apos;img title 属性&apos;&gt;</div></pre></td></tr></table></figure>
<h3 id="13-转义"><a href="#13-转义" class="headerlink" title="13.转义"></a>13.<strong>转义</strong></h3><p>支持在前面插入反斜杠转义的字符如下，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">\			反斜线</div><div class="line">`			反引号</div><div class="line">*			星号</div><div class="line">_			底线</div><div class="line">&#123;&#125;		花括号</div><div class="line">[]		方括号</div><div class="line">()		括弧</div><div class="line">#			井字号</div><div class="line">+			加号</div><div class="line">-			减号</div><div class="line">.			英文句点</div><div class="line">!			惊叹号</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<p>\            反斜线</p>
<p>`            反引号</p>
<p>*            星号</p>
<p>_            底线</p>
<p>{}        花括号</p>
<p>[]        方括号</p>
<p>()        括弧</p>
<p>#            井字号</p>
<p>+            加号</p>
<p>-            减号</p>
<p>.            英文句点</p>
<p>!            惊叹号</p>
<h3 id="14-表格"><a href="#14-表格" class="headerlink" title="14.表格"></a>14.<strong>表格</strong></h3><p>原本是 Github 风格的语法，大部分编辑器都支持。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">| 键 | 值 | 备注 |</div><div class="line">|----|----:|:------:|</div><div class="line">|MacBookPro|￥12000|办公用品|</div><div class="line">|打印机|￥12000|办公用品|</div><div class="line">|台式电脑|￥12000|办公用品|</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<table>
<thead>
<tr>
<th>键</th>
<th style="text-align:right">值</th>
<th style="text-align:center">备注</th>
</tr>
</thead>
<tbody>
<tr>
<td>MacBookPro</td>
<td style="text-align:right">￥12000</td>
<td style="text-align:center">办公用品</td>
</tr>
<tr>
<td>打印机</td>
<td style="text-align:right">￥1200</td>
<td style="text-align:center">办公用</td>
</tr>
<tr>
<td>台式电脑</td>
<td style="text-align:right">￥120</td>
<td style="text-align:center">办</td>
</tr>
</tbody>
</table>
<p><strong><em>Tips:第一行表头可以不要，第二行必须要有，第二行的冒号标识表中内容居左、居右还是剧中，如果不加冒号默认居左。</em></strong></p>
<h3 id="15-内嵌-HTML"><a href="#15-内嵌-HTML" class="headerlink" title="15.内嵌 HTML "></a>15.<strong>内嵌 HTML </strong></h3><p>MarkDown 保留了内嵌 HTML 的语法，标签中的内容都会输入到结果中。例如，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;html&gt;</div><div class="line">  &lt;body&gt;</div><div class="line">    &lt;iframe</div><div class="line">      frameborder=&quot;no&quot;</div><div class="line">      border=&quot;0&quot;</div><div class="line">      marginwidth=&quot;0&quot;</div><div class="line">      marginheight=&quot;0&quot;</div><div class="line">      width=330</div><div class="line">      height=86</div><div class="line">      src=&quot;http://music.163.com/outchain/player?type=2&amp;id=64447&amp;auto=0&amp;height=66&quot;&gt;</div><div class="line">    &lt;/iframe&gt;</div><div class="line">  &lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<p>效果如下：</p>
<html><br>  <body><br>    <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="http://music.163.com/outchain/player?type=2&id=64447&auto=0&height=66"><br>    </iframe><br>  </body><br></html>

<h2 id="三、综述"><a href="#三、综述" class="headerlink" title="三、综述"></a>三、<strong>综述</strong></h2><p>至此，就可以用 MarkDown 来写一般的文章啦。当然，如果有特殊的需求，比如：输入公式或者画 UML 图，那么可以参考下面的链接：</p>
<p><a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="external">MarkDown Tex 公式输入语法参考</a></p>
<p><a href="https://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="external">MarkDown 时序图语法参考</a></p>
<p><a href="http://flowchart.js.org/" target="_blank" rel="external">MarkDown 流程图语法参考</a></p>
]]></content>
      
        
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 博客搭建]]></title>
      <url>/2017/09/21/build-blog/</url>
      <content type="html"><![CDATA[<p>简单记录搭建博客的过程。</p>
<a id="more"></a>
<h2 id="本地搭建-Hexo-博客"><a href="#本地搭建-Hexo-博客" class="headerlink" title="本地搭建 Hexo 博客"></a>本地搭建 Hexo 博客</h2><h3 id="基本安装"><a href="#基本安装" class="headerlink" title="基本安装"></a>基本安装</h3><p>按照 <a href="https://hexo.io" target="_blank" rel="external">Hexo</a> 官网的方法，检查是否已经安装 Git 和 Node.js。然后顺序操作。需要注意的是，安装上述软件及 Hexo 时可能需要挂代理，不然下载太慢。可以使用 <a href="https://github.com/getlantern/lantern" target="_blank" rel="external">Lantern</a>，如果还是慢就需要耐心等待了。到此基本就可以安装成功了。</p>
<p>本地安装成功后，就可以生成 blog ，查看本地效果了。在安装的文件夹下鼠标右键 Git Bash Here 打开 Git 命令行依次使用</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo g //生成静态文件</div><div class="line"></div><div class="line">$ hexo s //运行本地服务器</div></pre></td></tr></table></figure>
<p>窗口会提示 blog 本地地址，一般是 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a>，打开这个地址就可以预览本地效果。</p>
<h3 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h3><p>Hexo Blog 的自定义大部分在安装文件夹的根目录的 _config.yml 文件中修改，具体可以参照官网的说明 <a href="https://hexo.io/zh-cn/docs/configuration.html" target="_blank" rel="external">（Hexo Blog 自定义配置）</a> 按照自己的需求修改。 </p>
<h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><p>预览本地效果时，可以看到浏览器一直在加载，猜测可能是某些资源或者脚本加载超时，由于不是搞前端的，遂直接搜索一番。果然，原来是 hexo blog 默认主题 landscape 使用了 Google 的 jQuery 库和代码等宽字体库，所以国内访问不到。解决方法，jQuery 替换为百度的 jQuery 库，Google 字体库的话直接删除。最后还有一个跨平台的字体优化，详情见这里 <a href="http://kuangqi.me/tricks/hexo-optimizations-for-mainland-china/" target="_blank" rel="external">Hexo Landscape主题的字体和JS库优化</a> ，在上述链接中有一处错误。即最后一段 代码等宽字体优化中需要编辑的文件为 Hexo blog 安装文件夹\themes\landscape\layout_partial\head.ejs 。</p>
<p>至此，本地基本安装及优化完毕。</p>
<h2 id="部署到-GitHub"><a href="#部署到-GitHub" class="headerlink" title="部署到 GitHub"></a>部署到 GitHub</h2><h3 id="注册-GitHub-账号"><a href="#注册-GitHub-账号" class="headerlink" title="注册 GitHub 账号"></a>注册 GitHub 账号</h3><p>需要注意的是注册时 username 和 之后 blog 的地址有关。即 username.github.io 所以要慎重填写。注册完后新建一个名字为 username.github.io 的项目。<br>配置 _config.yml 文件中的 deploy，即</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository: https://github.com/username/username.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>注意 deploy 配置中冒号与后面内容是有空格的。</p>
<p>至此，可以尝试使用 hexo d 命令部署到刚才新建的 username.github.io 的空项目。过程中按照提示操作即可。还有可能出现 403 等权限错误，那就需要下的配置SSH KEY 了。</p>
<h3 id="配置-SSH-KEY"><a href="#配置-SSH-KEY" class="headerlink" title="配置 SSH KEY"></a>配置 SSH KEY</h3><h4 id="生成-SSH-密钥"><a href="#生成-SSH-密钥" class="headerlink" title="生成 SSH 密钥"></a>生成 SSH 密钥</h4><p>任意位置鼠标右键 Git Bash Here 打开命令行，输入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> ~/.ssh</div><div class="line"><span class="comment"># Checks to see if there is a directory named ".ssh" in your user directory 在用户的根目录下检查是否有名为 ".ssh" 的文件存在。一般第一使用的话是没有的。</span></div></pre></td></tr></table></figure>
<p>使用 ssh-keygen 生成密钥</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C <span class="string">"your_email@example.com"</span></div><div class="line"><span class="comment"># Creates a new ssh key using the provided email 即注册 GitHub 账号的邮箱</span></div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/home/you/.ssh/id_rsa):</div></pre></td></tr></table></figure>
<p>保存密钥对的文件是可以自定义的，当然也可不填直接 Enter 使用括号中的默认值。接下来是输入密码及确认密码。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): [Type a passphrase]</div><div class="line">Enter same passphrase again: [Type passphrase again]</div></pre></td></tr></table></figure>
<p>此处的密码可以自定义或者不设密码。<br>接着会提示密钥对生成成功。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Your identification has been saved <span class="keyword">in</span> /home/you/.ssh/id_rsa.</div><div class="line">Your public key has been saved <span class="keyword">in</span> /home/you/.ssh/id_rsa.pub.</div><div class="line">The key fingerprint is:</div><div class="line">…………………此处是密钥内容…………………… your_email@example.com</div></pre></td></tr></table></figure>
<h4 id="GitHub-项目的公钥设置"><a href="#GitHub-项目的公钥设置" class="headerlink" title="GitHub 项目的公钥设置"></a>GitHub 项目的公钥设置</h4><p>打开 username.github.io 项目的 setting 找到 Deploy keys 点击 add deply key ，将上步中已经生成了密钥 id_rsa.pub 中的内容复制到 key 输入框中 title 自定义即可。其实也可以在整个账号的 settings –&gt; SSH and GPG keys 中的 SSH keys 中添加公钥。</p>
<p>然后测试配置是否成功，命令行输入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure>
<p>提示出现成功即可</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Hi username! You<span class="string">'ve successfully authenticated, but GitHub does not</span></div><div class="line"><span class="string">provide shell access.</span></div></pre></td></tr></table></figure>
<h4 id="修改-config-yml-的-deploy"><a href="#修改-config-yml-的-deploy" class="headerlink" title="修改 _config.yml 的 deploy"></a>修改 _config.yml 的 deploy</h4><p>repo 地址改用 ssh 形式，即</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  <span class="built_in">type</span>: git</div><div class="line">  repository: git@github.com:username/username.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure>
<p>至此，就可以成功部署到 GitHub 了。</p>
<h4 id="部署到-GitHub-时，多账号引起的错误"><a href="#部署到-GitHub-时，多账号引起的错误" class="headerlink" title="部署到 GitHub 时，多账号引起的错误"></a>部署到 GitHub 时，多账号引起的错误</h4><p>当使用多个账号部署时可能发生下面的错误，即</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">remote: Permission to 第二个账号username/第二个账号username.github.io.git denied to 第一个账号username.</div><div class="line">fatal: unable to access <span class="string">'https://github.com/第二个账号username/第二个账号username.github.io.git/'</span>: The requested URL returned error: 403</div><div class="line">FATAL Something<span class="string">'s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span></div><div class="line"><span class="string">Error: remote: Permission to 第二个账号username/第二个账号username.github.io.git denied to 第一个账号username.</span></div><div class="line"><span class="string">fatal: unable to access '</span>https://github.com/第二个账号username/第二个账号username.github.io.git/<span class="string">': The requested URL returned error: 403</span></div><div class="line"><span class="string"></span></div><div class="line"><span class="string">    at ChildProcess.&lt;anonymous&gt; (/.../第二个账号username.github.io/node_modules/hexo-util/lib/spawn.js:37:17)</span></div><div class="line"><span class="string">    at emitTwo (events.js:87:13)</span></div><div class="line"><span class="string">    at ChildProcess.emit (events.js:172:7)</span></div><div class="line"><span class="string">    at maybeClose (internal/child_process.js:827:16)</span></div><div class="line"><span class="string">    at Socket.&lt;anonymous&gt; (internal/child_process.js:319:11)</span></div><div class="line"><span class="string">    at emitOne (events.js:77:13)</span></div><div class="line"><span class="string">    at Socket.emit (events.js:169:7)</span></div><div class="line"><span class="string">    at Pipe._onclose (net.js:477:12)</span></div></pre></td></tr></table></figure>
<p>错误原因，默认情况下，github page 是私有项目，只有该 page 对应的账号才能提交代码。上述错误是第二个账号的仓库拒绝了第一个账号的提交。出现这种情况的原因是:安装Git时安装了GitGUI，自动在 system 级别中设置 credential.helper=manager 。并且不论配置所处级别（system、global或者local）如何，一旦设置了 manager ，都优先使用该方式。具体到该错误就是：该Win系统第一次使用 https 协议提交代码时，弹出了登陆 GitHub 的登陆界面，输入账号密码之后，顺利提交代码，同时 Git 自动在 system 级别中设置 credential.helper=manager ，并使用 Windows 的凭据管理保存了 GitHub 的登陆信息，而且登陆信息是全局性的，除非删除，否则无法通过 git 设置 local 或者 global 信息改变。提交另一项目时切换了账号，而全局的登陆信息还没有改变，所以出现了上述错误。</p>
<p>解决方法，在 Windows 控制面板–&gt;用户账户–&gt;管理你的凭据–&gt;Windows凭据 中找到关于 github.com 的凭据删除，然后重新 hexo d 按提示操作即可。</p>
<p><a href="http://www.jianshu.com/p/0ad3d88c51f4" target="_blank" rel="external">关于 GitHub 多账号问题</a></p>
<h2 id="使用自己的顶级域名"><a href="#使用自己的顶级域名" class="headerlink" title="使用自己的顶级域名"></a>使用自己的顶级域名</h2><p>使用自己域名的话，主要涉及到域名解析的问题，具体可以参考各大 DNS 解析服务商的说明。</p>
]]></content>
      
        
        <tags>
            
            <tag> hexo、blog </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
